@model FOS.Shared.SiteEquipmentDetailData
@{
    ViewBag.Title = "Retailer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #map-canvas {
        width: 100%;
        height: 474px;
    }
</style>

<!-- BEGIN PAGE HEADER-->
<div class="row-fluid">
    <div class="span12">
        <h3 class="page-title"></h3>
        <ul class="breadcrumb">
            <li>
                <a href="#">Sites</a>
                <span class="divider">/</span>
            </li>
            <li>
                <a href="#">New Sites</a>
            </li>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>



<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget green">

            <div class="widget-title">
                <h4>Add New Sites</h4>
            </div>

            <div class="widget-body" style="">
                <div>
                    <div class="clearfix">
                        @*<div class="btn-group">
                                <button id="editable-sample_new" class="btn green">
                                    Add New <i class="icon-plus"></i>
                                </button>
                            </div>*@
                        <div class="btn-group pull-right"></div>
                    </div>
                    @using (Ajax.BeginForm("NewUpdateSiteEquipment", "Retailer", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @class = "form-horizontal form-label-left", @style = "margin-top: -16px;" }))
                    {

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)

                        <div class="form-group">

                            <div class="span12">

                                <div class="span3" style="margin-top: 0px;">



                                    <!-- Select RegionalHead -->
                                    <div class="control-group">
                                        <label class="control-label">Select Client *</label>
                                        <div class="controls" style="float: left; margin-left: auto;">
                                            @Html.DropDownListFor(model => model.ClientID, new SelectList(Model.Client, "ID", "Name"), new { @class = "" })
                                            @Html.ValidationMessageFor(model => model.ClientID)
                                            @Html.HiddenFor(model => model.ClientID)
                                        </div>
                                    </div>




                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Project *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.SaleOfficerID, new SelectList(Model.SaleOfficers, "ID", "Name"), new { @class = "" })
                                            @Html.HiddenFor(model => model.SaleOfficerID)
                                            @Html.ValidationMessageFor(model => model.SaleOfficerID)
                                        </div>
                                    </div>

                                    @*<div class="control-group" style="margin-bottom: 10px">
                                            <label class="control-label">Select Distributor *</label>
                                            <div class="controls" style="margin-left: 0px">
                                                @Html.DropDownListFor(model => model.DealerID, new SelectList(Model.Dealers, "ID", "Name"), new { @class = "" })
                                                @Html.ValidationMessageFor(model => model.DealerID)
                                            </div>
                                        </div>*@

                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Zone *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.CityID, new SelectList(Model.Cities, "ID", "Name"), new { @class = "" })
                                            @Html.ValidationMessageFor(model => model.CityID)
                                        </div>
                                    </div>

                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Town *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.AreaID, new SelectList(Model.Areas, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.AreaID)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Sub Division *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.SubDivisionID, new SelectList(Model.SubDivisions, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.SubDivisionID)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Select Site *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.SiteID, new SelectList(Model.SubDivisions, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.SiteID)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Material Number *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.MaterialNo)
                                        </div>
                                    </div>
                                </div>

                                <div class="span3" style="margin-top: 0px;">

                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Equipment Category *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.EquipmentCatID, new SelectList(Model.EquipmentCategory, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.EquipmentCatID)
                                        </div>
                                    </div>

                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Equipment Type *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.EquipmentTypeID, new SelectList(Model.EquipmentType, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.EquipmentTypeID)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 10px">
                                        <label class="control-label">Equipment Brand *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.DropDownListFor(model => model.BrandID, new SelectList(Model.EquipmentBrand, "ID", "Name"), new { @class = "Areas" })
                                            @Html.HiddenFor(model => model.BrandID)
                                        </div>
                                    </div>



                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Condition</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.Condition)
                                            @Html.HiddenFor(model => model.ID)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Capacity</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.Capacity)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Size</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.Size)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Color</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.Color)
                                        </div>
                                    </div>

                                </div>

                                <div class="span3" style="margin-top: 0px;">




                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Year Of Manufacture</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.YearOfManufacture)
                                        </div>
                                    </div>


                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Year Of Install</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.YearOfInstall)
                                        </div>
                                    </div>

                                    <div class="control-group" style="margin-bottom: 0px">
                                        <label class="control-label" style="margin-top: 10px">Guarantee *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            <br />
                                            <br />
                                            @Html.RadioButton("Guarantee", "Yes", new { @style = "margin-top: 0px;" })   <span style="margin-right: 25px; margin-top: 2px">Yes</span>

                                            @Html.RadioButton("Guarantee", "No", new { @style = "margin-top: 0px;" })   <span style="margin-top: 2px">NO</span>
                                            @Html.HiddenFor(model => model.Guarantee)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Guarantee Detail</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.GuaranteeDetail)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 14px;">
                                        <label class="control-label">Date Of Expiry *</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.ExpiryDate, new { @class = "date-picker" })
                                            @Html.ValidationMessageFor(model => model.ExpiryDate)
                                        </div>
                                    </div>

                                    <div class="control-group" style="margin-bottom: 0px">
                                        <label class="control-label" style="margin-top: 10px">MaintainedBy KSB *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            <br />
                                            <br />
                                            @Html.RadioButton("MaintainedByKSB", "Yes", new { @style = "margin-top: 0px;" })   <span style="margin-right: 25px; margin-top: 2px">Yes</span>

                                            @Html.RadioButton("MaintainedByKSB", "No", new { @style = "margin-top: 0px;" })   <span style="margin-top: 2px">NO</span>
                                            @Html.HiddenFor(model => model.MaintainedByKSB)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Maintained By Whome</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.MaintaineByWhome)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Weight</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.Weight)
                                        </div>
                                    </div>




                                </div>

                                <div class="span3" style="margin-top: 0px;">

                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Medium In Use</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.MediumInUse)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 14px;">
                                        <label class="control-label">Operating Temperature *</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.OperatingTemperature)
                                        </div>
                                    </div>

                                    <div class="control-group" style="margin-bottom: 0px; margin-top: 4px;">

                                        <label class="control-label" style="">Operating Pressure</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.OperatingPressure)
                                        </div>
                                    </div>
                                    <div class="control-group" style="margin-bottom: 0px">
                                        <label class="control-label" style=""> Remarks</label>
                                        <div class="controls" style="margin-left: 0px">
                                            @Html.EditorFor(model => model.Remarks)
                                        </div>
                                    </div>
                                    <!-- Buttons -->

                                    <div class="control-group" style="margin-top: -25px">
                                        <div class="form-actions" style="float: right; padding-left: 0px; padding-right: 45px; margin-top: 40px;">
                                            <button type="submit" id="btnNew" class="btn btn-primary" style="margin-right: 8px; width: 100px;">
                                                <span id="create">Save</span>
                                            </button>
                                            @* <button type="button" id="btnRefresh" class="btn btn-info"><i class="icon-ban-circle icon-white" style="padding-right: 8px"></i>Reset</button>*@
                                        </div>
                                    </div>


                                </div>

                            </div>

                        </div>

                    }
                </div>
            </div>

        </div>
        <!-- END EXAMPLE TABLE widget-->
    </div>
</div>


<!-- BEGIN EDITABLE TABLE widget-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget green">
            <div class="widget-title">
                <h4>View Detail</h4>
              
            </div>
            <div class="widget-body">
                <div>
                    <div class="clearfix">
                        @*<div class="btn-group">
                                <button id="editable-sample_new" class="btn green">
                                    Add New <i class="icon-plus"></i>
                                </button>
                            </div>*@
                        <div class="btn-group pull-right"></div>
                    </div>
                    <div class="space15"></div>
                    <table class="table table-striped table-hover table-bordered" id="datatab">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ID)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.SaleOfficerID)
                                </th>

                                <th style="width: 35px !important">Sr #</th>

                                <th style="width: 170px !important">
                                    Site Name
                                </th>
                                <th style="width: 220px !important">
                                   Material Number
                                </th>
                                @*<th style="width: 170px !important">Distributor
                                    </th>*@
                                <th style="width: 170px !important">
                                    Equipment Category
                                </th>
                                <th style="width: 170px !important">
                                    Equipment Type
                                </th>
                                <th style="width: 170px !important">
                                    Brand   
                                </th>


                                <th style="width: 170px !important">
                                    Capacity
                                </th>

                                <th style="width: 60px !important; text-align: -webkit-center;">Actions</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- END EXAMPLE TABLE widget-->
    </div>
</div>
<!-- END EDITABLE TABLE widget-->
@*<script src="https://maps.googleapis.com/maps/api/js"></script>*@
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7X3GhN_ShrwYqU1Wc0gJbX3CMOMPZIs4"></script>

<script>
    function GenerateDetailGrid() {

        var location;
        var mapCanvas;
        var map_options;
        var marker;
        var map;

        var oTable = $('#datatab').DataTable({
            "aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
            "iDisplayLength": 10,
            "paging": true,
            "pagingType": "full_numbers",
            "serverSide": true,
            "bRetrieve": true,
            "bDestroy": true,
            "autoWidth": true,
            "ajax": {
                "type": "POST",
                "url": '@Url.Action("SiteEquipmentDataHandler", "Retailer")',
                "contentType": 'application/json; charset=utf-8',
                'data': function (data) {
                    data.SiteID = $('#SiteID').val();
                    return data = JSON.stringify(data);

                },

            },
            "fnDrawCallback": function (osetting) {

                var UpdateCheck = "0";
                var DeleteCheck = "0";

                if (UpdateCheck == "@HttpContext.Current.Session["UpdateCheck"]") { $(".edit").css("display", "none"); }

                else {

                    $(".edit").on("click", function () {
                        debugger;
                        ClearForm();

                        var edit = $(this);
                        var RetailerID = $(this).attr("data-id");

                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("GetEditSiteDetail", "Retailer")",
                            data: { RetailerID: RetailerID },
                            success: function (Response) {
                                debugger;
                                if (Response != null) {




                                    $('#ID').val(Response.ID);
                                    $("#ClientID").val(Response.ClientID);
                                    $("#SaleOfficerID").val(Response.ZoneID);
                                  
                                    $("#CityID").val(Response.CityID);
                                    $("#AreaID").val(Response.AreaID);
                                    $("#SubDivisionID").val(Response.SubDivisionID);
                                    $("#SiteID").val(Response.SiteID);
                                    $("#MaterialNo").val(Response.MaterialNo);
                                    $("#Condition").val(Response.Condition);
                                    $("#YearOfInstall").val(Response.YearOfInstall);
                                    $("#YearOfManufacture").val(Response.YearOfManufacture);
                                    $("#Weight").val(Response.Weight);

                                    $("#MediumInUse").val(Response.MediumInUse);
                                    $("#OperatingPressure").val(Response.OperatingPressure);

                                    $("#OperatingTemperature").val(Response.OperatingTemperature);
                                    $("#Remarks").val(Response.Remarks);

                                    $("#EquipmentCatID").val(Response.EquipmentCatID);
                                    $("#EquipmentTypeID").val(Response.EquipmentTypeID);

                                    $("#Size").val(Response.Size);
                                    $("#Color").val(Response.Color);


                                    $("#BrandID").val(Response.BrandID);
                                    $("#Capacity").val(Response.Capacity);


                                    if (Response.Guarantee == "true") {
                                        debugger;
                                        $("input[name=Guarantee][value='Yes']").prop("checked", true);
                                        $("#GuaranteeDetail").val(Response.GuaranteeDetail);
                                    }
                                   
                                    else {
                                        $("input[name=Guarantee][value='No']").prop("checked", true);

                                   
                                    }

                                    if (Response.MaintainedByKSB == "true") {
                                        debugger;
                                        $("input[name=MaintainedByKSB][value='Yes']").prop("checked", true);
                                     
                                    }

                                    else {
                                        $("input[name=MaintainedByKSB][value='No']").prop("checked", true);
                                        $("#MaintaineByWhome").val(Response.MaintaineByWhome);

                                    }

                                }

                                else { alertify.error('An Error Occured, Try Again...'); }
                            }

                        });

                        $("#Areas").change(function () {
                            $("#AreaNameID").val($(this).val());
                        });

                        $('html, body').animate({
                            //scrollTop: $("#main-content").offset().top
                        }, 500);

                    });

                }

                if (UpdateCheck == "@HttpContext.Current.Session["DeleteCheck"]") { $(".delete").css("display", "none"); }
                else {

                    $(".delete").on("click", function () {

                        var RetailerID = $(this).attr("data-id");

                        // confirm dialog
                        alertify.confirm("Are You Sure You Want To Delete This Record ?  ", function (e) {
                            if (e) {

                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("DeleteRetailer", "Retailer")",
                                    data: { retailerID: RetailerID },
                                    success: function (data) {

                                        if (data == "0") {
                                            alertify.success('Record Deleted Successfully');
                                            var table = $('#datatab').DataTable();
                                            table.row(this).remove().draw(false);
                                        }

                                        else { alertify.error('An Error Occured, Try Again...'); }
                                    }

                                });

                            } else { }
                        });

                    });

                }
            },

            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $("td:first", nRow).html(iDisplayIndex + 1);
                return nRow;
            },
            "oLanguage": { "sSearch": "Search Site : " },
            "sDom": 'lftipr',
            "processing": true,
            "deferRender": true,
            "bSelect": true,
            "columns": [
           { "data": "ID", "bVisible": false },
           { "data": "SaleOfficerID", "bVisible": false },
             
           { "data": "ID" },
                { "data": "SiteName" },
                { "data": "MaterialNo" },

                { "data": "EquipmentCatName" },
                { "data": "EquipmentTypeName" },
                { "data": "BrandName" },
               
                { "data": "Capacity" },
           {
               "sClass": "center-align-td",
               "mData": null,
               "bSortable": false,
               "mRender": function (data, type, row) {
                   return '<button class="btn btn-success edit" data-id=' + '"' + row.ID + '"' + ' data-toggle="modal" data-target="#myModal">' + '<i class=icon-pencil></i>' + '</button>';
               }
           }
            ],
            "order": [4, "asc"]

        });

    }


    $("input[name='Guarantee']").change(function () {
        debugger;
        if ($(this).val() == "Yes") {
            $("#GuaranteeDetail").show();
        } else {
            $("#GuaranteeDetail").hide();
        }
    });
    $("input[name='MaintainedByKSB']").change(function () {
        debugger;
        if ($(this).val() == "Yes") {
            $("#MaintaineByWhome").hide();
        } else {
            $("#MaintaineByWhome").show();
        }
    });
    function LoadDealer() {

        var regionID = $("#SaleOfficerID").val();

        $.ajax({
            type: "POST",
            data: { id: regionID },
            url: "@Url.Action("GetDealerListBySaleOfficerID", "Retailer")",
            dataType: 'json',
            success: function (json) {
                var $el = $("#DealerID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>")
                            .attr("value", key.ID).text(key.Name));
                });
            }
        });

    }

    function LoadCities(RegionalHeadID) {
        debugger;
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetZoneList", "Dealer")",
            data: { RegionID: RegionalHeadID },
            success: function (json) {

                var $el = $("#CityID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });

                var $el = $("#AreaID");
                $el.empty(); // remove old options

                $("#CityID option:first").trigger("change");
                // GetAreaList($("#CityID option:first").val());
            }
        });
    }

    function LoadAreas(CityID) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetAreaListByCityID", "Dealer")",
            data: { CityID: CityID == null ? 0 : CityID },
            success: function (json) {

                var $el = $("#AreaID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });
            }

        });
    }


        function LoadSubDivision(CityID) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSubDivisionListByAreaID", "Dealer")",
            data: { CityID: CityID == null ? 0 : CityID },
            success: function (json) {

                var $el = $("#SubDivisionID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });
            }

        });
    }

    $(document).ready(function () {
        GenerateDetailGrid();
        $('input:radio[name="Gurantee"][value="Yes"]').prop('checked', true);

        $("#liRetailer,#liManageRetailer").addClass("active");

        var WriteCheck = "0";

        if (WriteCheck == "@HttpContext.Current.Session["WriteCheck"]") {
            // $("#btnNew").css("display", "none");
            $("#btnNew").attr("disabled", true);
        }
        else {
        }



        $("#SaleOfficerID").change(function () {
            debugger;
            LoadCities($(this).val());
        });

        function LoadProjects(ClientID) {

            try {
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: ClientID },
                    url: "@Url.Action("GetAllProjects", "Job")",
                    success: function (json) {

                        var $el = $("#SaleOfficerID");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {
                            $el.append($("<option></option>")
                                .val(key.ID).text(key.Name));
                        });
                    }

                });
            } catch (e) {
            }

        }

        function LoadDealers(RegionalHeadID) {

            try {
                $.ajax({
                    type: "POST",
                    data: { RegionalHeadID: RegionalHeadID },
                    url: "@Url.Action("GetAllDealersListRelatedToRegionalHead", "Dealer")",
                    success: function (json) {

                        var $el = $("#DealerID");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {
                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.Name));
                        });
                    }

                });
            } catch (e) {
            }

        }

             function LoadEquipmentTypes(RegionalHeadID) {

            try {
                $.ajax({
                    type: "POST",
                    data: { ID: RegionalHeadID },
                    url: "@Url.Action("GetEquipmentTypeByID", "Dealer")",
                    success: function (json) {

                        var $el = $("#EquipmentTypeID");
                        $el.empty(); // remove old options
                        $.each(json, function (value, key) {
                            $el.append($("<option></option>")
                                    .val(key.ID).text(key.Name));
                        });


                    }

                });
            } catch (e) {
            }

        }

         function LoadSites() {
              var ClientID = $("#ClientID").val();
             var ProjectID = $("#SaleOfficerID").val();
              var CityID = $("#CityID").val();
              var AreaID = $("#AreaID").val();
              var SubDevID = $("#SubDivisionID").val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSitesList", "Complaint")",
            data: { ClientID: ClientID, ProjectID: ProjectID, CityID: CityID, AreaID: AreaID, SubDivisionID: SubDevID},
            success: function (json) {

                var $el = $("#SiteID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {
                    $el.append($("<option></option>").val(key.ID).text(key.Name));
                });
            
                if ($("#SiteID").val() != null) {
                    $('#datatab').dataTable().fnDestroy();
                    GenerateDetailGrid();
                }
                else {
                    $('#datatab').dataTable().empty();
                }

            }
        });
    }
        $("#ClientID").change(function () {
            debugger;
            LoadProjects($(this).val());
            LoadDealers($(this).val());


        });
        $("#CityID").change(function () {
            LoadAreas($(this).val());
        });

        $("#AreaID").change(function () {
            LoadSubDivision($(this).val());
        });

        $("#SubDivisionID").change(function () {
            LoadSites();
        });

   
        $("#SiteID").change(function () {
            debugger;
            $('#datatab').dataTable().fnDestroy();
            if ($('#SiteID').val() != null) {
                GenerateDetailGrid();
            }
            else {
                var table = $('#datatab').DataTable();

                table
                    .clear()
                    .draw();
            }
        });

        $("#EquipmentCatID").change(function () {
            LoadEquipmentTypes($(this).val());
        });

        $("#btnRefresh").click(function () {
            ClearForm();
        });

    });

    $(document).ajaxComplete(function () {

    });
</script>
<script type="text/javascript">

    function ClearForm() {
        $('#MaterialNo').val('');
        $('#Condition').val('');
        $('#Capacity').val('');
        $('#Size').val('');
        $('#Color').val('');

        $('#YearOfManufacture').val('');
        $('#YearOfInstall').val('');
        $('#Guarantee').val('');
        $('#GuaranteeDetail').val('');
        $('#ExpiryDate').val('');
        $('#MaintainedByKSB').val('');
        $('#MaintaineByWhome').val('');
        $('#MediumInUse').val('');
        $('#Weight').val('');
        $('#OperatingTemperature').val('');
        $('#OperatingPressure').val('');
        $('#Remarks').val('');


    }

    function OnSuccess(response) {
        if (response == "1") {
            alertify.success("Site Detail Saved Successfully");
            ClearForm();
            $('.close').trigger('click');
        }
        else if (response == "2") {
            alertify.error("Phone Number Already Exist.");
        }
        else if (response == "3") {
            alertify.error("CNIC Already Exist");
        }
        else if (response == "4") {
            alertify.error("Account No Already Exist");
        }
        else if (response == "5") {
            alertify.error("Card No Already Exist");
        }
        else {
            alertify.error("Unable To Save");
        }

    }

    function OnFailure(response) {
        if (response.status == 422) {
            var errors = JSON.parse(response.responseText);
            alertify.error(errors.errors);
        }
        else {
            alertify.error(response);
        }
    }
</script>